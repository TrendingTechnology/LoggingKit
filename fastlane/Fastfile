fastlane_version "2.137.0"

default_platform :ios

platform :ios do

  desc "Release a new version of LoggingKit"
  lane :release do |options|
    # Ensure Git status is clean
    ensure_git_status_clean
    # Ensure Git branch is master
    ensure_git_branch(branch: 'master')
    # Perform Dependency-Manager compatibility tests
    compatibilityTests
    # Perform Tests
    tests
    # Retrieve Version from options
    version = options[:version]
    # Increment Version
    increment(version: version)
    # Add Git Tag
    add_git_tag(tag: version)
    # Push Git Tag
    push_git_tags()
    # Push Git commit
    push_to_git_remote()
    # Pod push / Pod trunk
    # pod_push()
  end

  desc "Increment Version"
  lane :increment do |options|
    # Retrieve Version from options
    version = options[:version]
    # Set Podspec version
    #version_bump_podspec(
    #  path: "LoggingKit.podspec", 
    #  version_number: version
    #)
    # Set Framework plist version
    set_info_plist_value(
      path: "Configs/LoggingKit.plist", 
      key: "CFBundleShortVersionString", 
      value: version
    )
    # Set Framework Tests plist version
    set_info_plist_value(
      path: "Configs/LoggingKitTests.plist", 
      key: "CFBundleShortVersionString", 
      value: version
    )
    # Set Example plist version
    set_info_plist_value(
      path: "Example/Resources/Info.plist", 
      key: "CFBundleShortVersionString", 
      value: version
    )
    # Commit modified files
    git_commit(
        path: [
          "Configs/LoggingKit.plist", 
          "Configs/LoggingKitTests.plist", 
          "Example/Resources/Info.plist"
        ],
        message: "chore: LoggingKit Version #{version} ðŸš€"
    )
  end

  desc "Runs tests"
  lane :tests do
    # Perform iOS Tests
    scan(
      project: "LoggingKit.xcodeproj",
      scheme: "LoggingKit-iOS",
      clean: true,
      destination: "platform=iOS Simulator,name=iPhone 11,OS=14.2"
    )
    # Perform tvOS Tests
    scan(
      project: "LoggingKit.xcodeproj",
      scheme: "LoggingKit-tvOS",
      clean: true,
      destination: "platform=tvOS Simulator,name=Apple TV,OS=14.2"
    )
    # Perform macOS Tests
    scan(
      project: "LoggingKit.xcodeproj",
      scheme: "LoggingKit-macOS",
      clean: true,
      destination: "platform=OS X,arch=x86_64"
    )
  end

  desc "Run Dependency-Manager compatibility tests"
  lane :compatibilityTests do
    # Carthage build to ensure Carthage compatibility
    # carthage(
    #  command: "build", 
    #  no_skip_current: true, 
    #  cache_builds: true
    #)
    # Pod lib lint to ensure CocoaPods compatibility
    # pod_lib_lint(allow_warnings: true)
    # SPM Build to ensure Swift Package Manager compatibility
    spm(command: "build")
    # Delete SPM build artifacts
    spm(command: "clean")
  end
  
  lane :documentation do
      jazzy
  end
  
end



